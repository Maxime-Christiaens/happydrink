{"ast":null,"code":"import _classCallCheck from \"/home/becode/becode_projects/ReactJS/happydrink/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/becode/becode_projects/ReactJS/happydrink/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/becode/becode_projects/ReactJS/happydrink/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/becode/becode_projects/ReactJS/happydrink/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/becode/becode_projects/ReactJS/happydrink/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/becode/becode_projects/ReactJS/happydrink/src/compenents/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport logo from \"../assets/logo.svg\";\nimport '../css/App.css';\nimport { establishments } from './establishments/fixtures';\nimport Establishment from './establishments/establishemt';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    // Ne pas oublier d'appeler le constructeur père ! (Obligatoire)\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props)); // On définit le state de notre component que l'on hérite de la classe \"Component\"\n    // Cela remplace la fonction \"getInitialState\"\n\n    _this.randomPseudo = function () {\n      // On s'amuse un peu ;)\n      var randomPseudo = \"\";\n      var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n      var size = Math.floor(Math.random() * 10) + 5;\n\n      for (var i = 0; i < size; i++) {\n        randomPseudo += possible.charAt(Math.floor(Math.random() * possible.length));\n      } // On met à jour le state via la fonction \"setState\" héritée de la classe Component\n\n\n      _this.setState({\n        pseudo: randomPseudo\n      });\n    };\n\n    _this.radomBaguette = function () {\n      var size = 10 + math;\n    };\n\n    _this.state = {\n      pseudo: \"Inconnu\",\n      baguette: \"17\"\n    };\n    return _this;\n  } // On définit la fonction appelée lors d'un clic sur le lien \"Changer le pseudo !\"\n  // la syntaxe  \" nomFonction = () => {} \" nous permet de conserver le contexte `this` du scope courant. (Ici, la classe App)\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      //Création d'une constante qui contiendra ce que la fonction map appliquera sur tout les éléments du tableau\n      //Dans notre cas la constante contiendra les info du tableau en JSX ce qui permettra de les afficher par la suite à l'aide du return\n      var listEstablishement = establishments.map(function (establishment) {\n        return (// L'attribut \"key\" permet à React d'identifier les éléments.\n          // Cela améliore les performances lors de l'ajout,\n          // la modification et la suppression d'un élément.\n          React.createElement(Establishment, {\n            key: establishment.id //J'établis la \"connexion\" entre les propriétés; les props et ce qu'ils doivent contenir\n            ,\n            establishment: establishment,\n            className: \"establishment\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          })\n        );\n      });\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Welcome \\\"\", this.state.pseudo, \"\\\" to \", this.props.title), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Voice la longueur de ta baguette \", this.state.baguette, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.props.phrase), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Happy Drink\", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"(Bad Propaganda)\")), React.createElement(\"button\", {\n        onClick: this.randomPseudo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Changer le pseudo !\")), React.createElement(\"div\", {\n        className: \"App-establishment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, listEstablishement)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/becode/becode_projects/ReactJS/happydrink/src/compenents/App.js"],"names":["React","Component","Fragment","establishments","Establishment","App","props","randomPseudo","possible","size","Math","floor","random","i","charAt","length","setState","pseudo","radomBaguette","math","state","baguette","listEstablishement","map","establishment","id","logo","title","phrase"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,OAAO,gBAAP;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB;AACA,6EAAMA,KAAN,GAFiB,CAGjB;AACA;;AAJiB,UAYnBC,YAZmB,GAYJ,YAAM;AACnB;AACA,UAAIA,YAAY,GAAG,EAAnB;AACA,UAAMC,QAAQ,GAAG,sDAAjB;AACA,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAA9C;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAApB,EAA0BI,CAAC,EAA3B,EAA+B;AAC7BN,QAAAA,YAAY,IAAIC,QAAQ,CAACM,MAAT,CAAgBJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,QAAQ,CAACO,MAApC,CAAhB,CAAhB;AACD,OAPkB,CAQnB;;;AACA,YAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAEV;AADI,OAAd;AAGD,KAxBkB;;AAAA,UAyBnBW,aAzBmB,GAyBH,YAAK;AACnB,UAAIT,IAAI,GAAG,KAAKU,IAAhB;AACD,KA3BkB;;AAKjB,UAAKC,KAAL,GAAa;AACXH,MAAAA,MAAM,EAAE,SADG;AAEXI,MAAAA,QAAQ,EAAE;AAFC,KAAb;AALiB;AASlB,G,CACD;AACA;;;;;6BAiBS;AACP;AACA;AACA,UAAMC,kBAAkB,GAAGnB,cAAc,CAACoB,GAAf,CAAmB,UAACC,aAAD,EAAmB;AAC/D,eACE;AACA;AACA;AACA,8BAAC,aAAD;AACE,YAAA,GAAG,EAAEA,aAAa,CAACC,EADrB,CAEE;AAFF;AAGE,YAAA,aAAa,EAAED,aAHjB;AAIE,YAAA,SAAS,EAAC,eAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAWD,OAZ0B,CAA3B;AAcA,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEE,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAe,KAAKN,KAAL,CAAWH,MAA1B,YAAwC,KAAKX,KAAL,CAAWqB,KAAnD,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAuC,KAAKP,KAAL,CAAWC,QAAlD,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKf,KAAL,CAAWsB,MAAf,CAJF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADb,CANF,EASC;AAAQ,QAAA,OAAO,EAAG,KAAKrB,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BATD,CADF,EAYE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGe,kBADH,CAZF,CADF,CADF;AAoBD;;;;EAlEerB,S;;AAsElB,eAAeI,GAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport logo from '../assets/logo.svg';\nimport '../css/App.css';\nimport { establishments } from './establishments/fixtures'\nimport Establishment from './establishments/establishemt'\n\nclass App extends Component {\n  constructor(props) {\n    // Ne pas oublier d'appeler le constructeur père ! (Obligatoire)\n    super(props);\n    // On définit le state de notre component que l'on hérite de la classe \"Component\"\n    // Cela remplace la fonction \"getInitialState\"\n    this.state = {\n      pseudo: \"Inconnu\",\n      baguette: \"17\"\n    };\n  }\n  // On définit la fonction appelée lors d'un clic sur le lien \"Changer le pseudo !\"\n  // la syntaxe  \" nomFonction = () => {} \" nous permet de conserver le contexte `this` du scope courant. (Ici, la classe App)\n  randomPseudo = () => {\n    // On s'amuse un peu ;)\n    let randomPseudo = \"\"\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n    const size = Math.floor(Math.random() * 10) + 5\n    for (let i = 0; i < size; i++) {\n      randomPseudo += possible.charAt(Math.floor(Math.random() * possible.length))\n    }\n    // On met à jour le state via la fonction \"setState\" héritée de la classe Component\n    this.setState({\n      pseudo: randomPseudo\n    })\n  }\n  radomBaguette = () =>{\n    let size = 10 + math\n  }\n  render() {\n    //Création d'une constante qui contiendra ce que la fonction map appliquera sur tout les éléments du tableau\n    //Dans notre cas la constante contiendra les info du tableau en JSX ce qui permettra de les afficher par la suite à l'aide du return\n    const listEstablishement = establishments.map((establishment) => {\n      return (\n        // L'attribut \"key\" permet à React d'identifier les éléments.\n        // Cela améliore les performances lors de l'ajout,\n        // la modification et la suppression d'un élément.\n        <Establishment\n          key={establishment.id}\n          //J'établis la \"connexion\" entre les propriétés; les props et ce qu'ils doivent contenir\n          establishment={establishment}\n          className=\"establishment\"\n        />\n      );\n    });\n  \n    return (\n      <Fragment>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h2>Welcome \"{ this.state.pseudo }\" to {this.props.title}</h2>\n            <h3>Voice la longueur de ta baguette { this.state.baguette } </h3>\n            <p>{this.props.phrase}</p>\n          \n            <p>\n              Happy Drink<code>(Bad Propaganda)</code>\n            </p>\n           <button onClick={ this.randomPseudo } >Changer le pseudo !</button>\n          </header>\n          <div className=\"App-establishment\">\n            {listEstablishement}\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}